"""Auth models

Revision ID: 7752ba0e01d1
Revises:
Create Date: 2025-04-12 14:27:58.092479

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "7752ba0e01d1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_user",
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("password_hash", sa.Text(), nullable=False),
        sa.Column(
            "password_updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "is_admin",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("true"),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "log_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_auth_user_is_active"),
        "auth_user",
        ["is_active"],
        unique=False,
    )
    op.create_index(
        op.f("ix_auth_user_is_admin"), "auth_user", ["is_admin"], unique=False
    )
    op.create_index(
        op.f("ix_auth_user_log_time"), "auth_user", ["log_time"], unique=False
    )
    op.create_index(
        op.f("ix_auth_user_username"), "auth_user", ["username"], unique=True
    )
    op.create_table(
        "auth_token",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("base_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column(
            "token_type",
            sa.Enum("ACCESS", "REFRESH", name="bearertokentypeenum"),
            nullable=False,
        ),
        sa.Column(
            "log_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["auth_user.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_auth_token_base_id"), "auth_token", ["base_id"], unique=False
    )
    op.create_index(
        op.f("ix_auth_token_log_time"),
        "auth_token",
        ["log_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_auth_token_token_type"),
        "auth_token",
        ["token_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_auth_token_user_id"), "auth_token", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_auth_token_user_id"), table_name="auth_token")
    op.drop_index(op.f("ix_auth_token_token_type"), table_name="auth_token")
    op.drop_index(op.f("ix_auth_token_log_time"), table_name="auth_token")
    op.drop_index(op.f("ix_auth_token_base_id"), table_name="auth_token")
    op.drop_table("auth_token")
    op.drop_index(op.f("ix_auth_user_username"), table_name="auth_user")
    op.drop_index(op.f("ix_auth_user_log_time"), table_name="auth_user")
    op.drop_index(op.f("ix_auth_user_is_admin"), table_name="auth_user")
    op.drop_index(op.f("ix_auth_user_is_active"), table_name="auth_user")
    op.drop_table("auth_user")
    # ### end Alembic commands ###
